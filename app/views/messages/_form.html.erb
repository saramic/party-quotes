<%= form_with(model: message, class: "px-8 pt-6 pb-8 mb-4") do |form| %>
  <% if message.errors.any? %>
<div class="text-red-500 bg-red-100 border border-red-500 p-3 rounded mb-2">
  <h2><%= pluralize(message.errors.count, "error") %> prohibited this message from being saved:</h2>
  <ul>
    <% message.errors.each do |error| %>
    <li><%= error.full_message %></li>
    <% end %>
  </ul>
</div>
<% end %>

<div class="mb-4">
  <%= form.label :text, "Your message", class: "block text-gray-700 text-sm font-bold mb-2" %>
  <%= form.text_area(
    :text,
    class: "shadow appearance-none border #{message.errors.has_key?(:text) ? "border-red-500 " : " "}rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline",
    rows: "10",
  ) %>
  <% if message.errors.has_key?(:text) %>
    <p class="text-red-500 text-xs italic">
      <%= message.errors[:text].join %>
    </p>
  <% end %>
</div>

    <div class="mb-4">
      <%= form.label :name, "Name", class: "block text-gray-700 text-sm font-bold mb-2" %>
      <%= form.text_field(
        :name ,
        class: "shadow appearance-none border #{message.errors.has_key?(:text) ? "border-red-500 " : " "}rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline",
      ) %>
      <% if message.errors.has_key?(:name) %>
        <p class="text-red-500 text-xs italic">
          <%= message.errors[:name].join %>
        </p>
      <% end %>
    </div>

    <div class="mb-4">
      <%= form.label :picture, "Photo", class: "block text-gray-700 text-sm font-bold mb-2" %>
      <%= form.file_field :picture, class: "shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" %>
    </div>

    <div class="flex items-center justify-between">

      <%= form.submit class: "bg-slate-200 text-white font-bold  py-2 px-4 rounded focus:outline-none focus:shadow-outline",
      disabled: true, id: "submit" %>
   </div>
  <% end %>


<script type="text/javascript">
//this is not working if the page is reloaded
const messageInput = document.querySelector('#message_text');
const buttonGo = document.querySelector('#submit')
messageInput.addEventListener('input', updateButtonStatus);

function updateButtonStatus(e) {
let countMessage = e.target.value.length;
if (countMessage >= 6 ){
  document.querySelector("#submit").disabled=false
  buttonGo.style.backgroundColor = "blue";
}
}

  let nameInput = document.querySelector("#message_name"); // fetch by id #id_name
  nameInput.addEventListener("input", updateValue); // listen to any input events

  function updateValue(event) { // called for every single change in input
    // console.log(event.target.value); // for debugging - See updates in console as they type name
    if(event.target.value === "tata") { // check for a particular value
      let titleNewMessage = document.querySelector("#title-new-message"); // fetch by id #id-name
      // note following line is buggy as will be added every time you type tata
      titleNewMessage.textContent = `${titleNewMessage.textContent} - from Dad`;
    }
  }
  </script>
